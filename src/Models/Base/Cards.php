<?php

/**
 * This file is generated by PromCMS, do not edit this file as changes made to this file will be overriden in the next model sync.
 * Updates should be made to ../Cards.php as that is not overriden.
 */

namespace PromCMS\App\Models\Base;

use Doctrine\ORM\Mapping as ORM;
use PromCMS\Core\Database\Models\Mapping as PROM;
use PromCMS\Core\Database\Models\Abstract\Entity;

#[ORM\MappedSuperclass]
class Cards extends Entity
{
  use \PromCMS\Core\Database\Models\Trait\Timestamps;
  use \PromCMS\Core\Database\Models\Trait\Ordable;
  use \PromCMS\Core\Database\Models\Trait\NumericId;
  
  #[ORM\ManyToOne(targetEntity: \PromCMS\Core\Database\Models\File::class), ORM\JoinColumn(name: 'playerimage_id', nullable: true, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Obrázek hráče', type: 'file', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\Core\Database\Models\File $playerImage;
  
  #[ORM\ManyToOne(targetEntity: \PromCMS\Core\Database\Models\File::class), ORM\JoinColumn(name: 'clubimage_id', nullable: true, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Obrázek klubu', type: 'file', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\Core\Database\Models\File $clubImage;
  
  #[ORM\Column(name: 'name', nullable: false, unique: false, type: 'string'), PROM\PromModelColumn(title: 'Název', type: 'string', editable: false, hide: false, localized: false)]
  protected ?string $name;
  
  #[ORM\Column(name: 'rating', nullable: true, unique: false, type: 'integer'), PROM\PromModelColumn(title: 'Hodnocení', type: 'number', editable: false, hide: false, localized: false)]
  protected ?int $rating;
  
  #[PROM\PromModelColumn(title: 'Stats', type: 'json', editable: true, hide: false, localized: false)]
  protected ?array $stats;
  
  #[ORM\Column(name: 'cardtype', nullable: false, unique: false, type: 'string', enumType: CardType::class), PROM\PromModelColumn(title: 'Typ karty', type: 'enum', editable: false, hide: false, localized: false)]
  protected ?CardType $cardType;
  
  #[PROM\PromModelColumn(title: 'Cena', type: 'number', editable: true, hide: false, localized: false)]
  protected ?int $finalPrice;
  
  #[PROM\PromModelColumn(title: 'Měna', type: 'enum', editable: true, hide: false, localized: false)]
  protected ?Currency $currency;
  
  #[ORM\OneToOne(targetEntity: \PromCMS\App\Models\CardBackgrounds::class), ORM\JoinColumn(name: 'background_id', nullable: false, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Pozadí karty', type: 'relationship', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\App\Models\CardBackgrounds $background;
  
  #[ORM\OneToOne(targetEntity: \PromCMS\App\Models\Countries::class), ORM\JoinColumn(name: 'country_id', nullable: false, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Země', type: 'relationship', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\App\Models\Countries $country;
  
  #[ORM\OneToOne(targetEntity: \PromCMS\App\Models\CardSizes::class), ORM\JoinColumn(name: 'size_id', nullable: false, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Velikost', type: 'relationship', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\App\Models\CardSizes $size;
  
  #[ORM\OneToOne(targetEntity: \PromCMS\App\Models\Orders::class), ORM\JoinColumn(name: 'fororder_id', nullable: false, unique: false, referencedColumnName: 'id'), PROM\PromModelColumn(title: 'Objednávka', type: 'relationship', editable: false, hide: false, localized: false)]
  protected ?\PromCMS\App\Models\Orders $forOrder;
  
  #[PROM\PromModelColumn(title: 'Bonusové informace za příplatek', type: 'json', editable: true, hide: false, localized: false)]
  protected ?array $bonuses;
  
  function __construct()
  {
  }
  
  #[ORM\PostLoad]
  function __prom__initCollections()
  {
  }
  
  function getPlayerImage(): ?\PromCMS\Core\Database\Models\File
  {
    return $this->playerImage;
  }
  
  function setPlayerImage(?\PromCMS\Core\Database\Models\File $playerImage): static
  {
    $this->playerImage = $playerImage;
    return $this;
  }
  
  function getClubImage(): ?\PromCMS\Core\Database\Models\File
  {
    return $this->clubImage;
  }
  
  function setClubImage(?\PromCMS\Core\Database\Models\File $clubImage): static
  {
    $this->clubImage = $clubImage;
    return $this;
  }
  
  function getName(): string
  {
    return $this->name;
  }
  
  function setName(string $name): static
  {
    $this->name = $name;
    return $this;
  }
  
  function getRating(): ?int
  {
    return $this->rating;
  }
  
  function setRating(?int $rating): static
  {
    $this->rating = $rating;
    return $this;
  }
  
  function getStats(): ?array
  {
    return $this->stats;
  }
  
  function setStats(?array $stats): static
  {
    $this->stats = $stats;
    return $this;
  }
  
  function getCardType(): CardType
  {
    return $this->cardType;
  }
  
  function setCardType(CardType $cardType): static
  {
    $this->cardType = $cardType;
    return $this;
  }
  
  function getFinalPrice(): int
  {
    return $this->finalPrice;
  }
  
  function setFinalPrice(int $finalPrice): static
  {
    $this->finalPrice = $finalPrice;
    return $this;
  }
  
  function getCurrency(): Currency
  {
    return $this->currency;
  }
  
  function setCurrency(Currency $currency): static
  {
    $this->currency = $currency;
    return $this;
  }
  
  function getBackground(): \PromCMS\App\Models\CardBackgrounds
  {
    return $this->background;
  }
  
  function setBackground(\PromCMS\App\Models\CardBackgrounds $background): static
  {
    $this->background = $background;
    return $this;
  }
  
  function getCountry(): \PromCMS\App\Models\Countries
  {
    return $this->country;
  }
  
  function setCountry(\PromCMS\App\Models\Countries $country): static
  {
    $this->country = $country;
    return $this;
  }
  
  function getSize(): \PromCMS\App\Models\CardSizes
  {
    return $this->size;
  }
  
  function setSize(\PromCMS\App\Models\CardSizes $size): static
  {
    $this->size = $size;
    return $this;
  }
  
  function getForOrder(): \PromCMS\App\Models\Orders
  {
    return $this->forOrder;
  }
  
  function setForOrder(\PromCMS\App\Models\Orders $forOrder): static
  {
    $this->forOrder = $forOrder;
    return $this;
  }
  
  function getBonuses(): ?array
  {
    return $this->bonuses;
  }
  
  function setBonuses(?array $bonuses): static
  {
    $this->bonuses = $bonuses;
    return $this;
  }
}