<?php

/**
 * This file is generated by PromCMS, however you can add methods and other logic to this class
 * as this file will be just checked for presence of class in next models sync.
 */

namespace PromCMS\App\Models;

use Doctrine\ORM\Mapping as ORM;
use PromCMS\Core\Database\Models\Mapping as PROM;

#[ORM\Entity, ORM\Table(name: 'cards'), PROM\PromModel(ignoreSeeding: true), ORM\HasLifecycleCallbacks]
class Cards extends Base\Cards
{

    public function setBonuses(?array $bonuses): static
    {
        if ($bonuses) {
            $sizeMaterialBonuses = $this->getSize()->getMaterial()->getBonuses();
            $parsedBonuses = array_filter($bonuses, fn($bonusValue, $bonusKey) => !empty($bonusKey) && !empty($bonusValue), ARRAY_FILTER_USE_BOTH);

            foreach ($parsedBonuses as $bonusKey => $bonus) {
                $parsedBonuses[$bonusKey] = htmlspecialchars($bonus);
            }

            // Reset passed bonuses
            $bonuses = [];

            if ($sizeMaterialBonuses && isset($sizeMaterialBonuses['data'])) {
                foreach ($sizeMaterialBonuses['data'] as $actualBonus) {
                    if (!isset($parsedBonuses[$actualBonus['name']])) {
                        continue;
                    }
                    $bonusKey = $actualBonus['name'];
                    $bonuses[] = ['name' => $bonusKey, 'value' => $parsedBonuses[$bonusKey], 'price' => 0];
                }
            }

        }
        return parent::setBonuses(['data' => $bonuses]);
    }

    function createPrice(): int
    {
        $total = $this->getSize()->getPrice();
        $material = $this->getSize()->getMaterial();
        $bonuses = $this->getBonuses()['data'] ?? [];

        foreach ($bonuses as $bonus) {
            $total += $material->getBonusPrice($bonus['name']) ?? 0;
        }
        return $total;
    }
}